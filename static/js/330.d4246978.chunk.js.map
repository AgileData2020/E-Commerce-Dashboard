{"version":3,"file":"static/js/330.d4246978.chunk.js","mappings":"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","sources":["component/salestatuschart.js","component/chartStraming.js","component/customTable.js","dashboard/index.js","helper.js","../node_modules/@rsuite/icon-font/lib/action/FileDownload.js","../node_modules/@rsuite/icons/FileDownload.js","../node_modules/@rsuite/icons/lib/icons/FileDownload.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Panel } from 'rsuite';\nimport ReactApexChart from 'react-apexcharts';\nimport { useSelector } from 'react-redux';\nimport { SelectPicker } from 'rsuite';\nconst Salestatuschart = () => {\n\n    let revenueArray = [];\n    let categories = [];\n\n    const [category, setCategory] = useState(null);\n    const inventoryData = useSelector(state => state?.inventory?.inventoryData);\n\n    const filterDatabyCate = inventoryData.filter((item) => {\n        if (category) {\n            return item.category === category\n        } else {\n            return item\n        }\n    })\n    filterDatabyCate.forEach(element => {\n        revenueArray.push(element.revenue);\n        categories.push(element.category)\n    });\n    const options = {\n        chart: {\n            type: 'bar',\n        },\n\n        xaxis: {\n            categories: categories,\n        },\n        title: {\n            text: 'Revenue data filterable by product categories',\n            align: 'left'\n        },\n        colors: ['#2d64aa'],\n        dataLabels: {\n            style: {\n                fontSize: '11px',\n                fontWeight: 'bold'\n            },\n            enabled: true,\n            dropShadow: {\n                enabled: true,\n                left: 2,\n                top: 2,\n                opacity: 0.5\n            }\n        },\n        yaxis: [\n            {\n                axisTicks: {\n                    show: true,\n                },\n                axisBorder: {\n                    show: true,\n                    color: 'black'\n                },\n                labels: {\n                    style: {\n                        colors: 'black',\n                    }\n                },\n                title: {\n                    text: 'Revenue',\n                    style: {\n                        color: 'black',\n                        fontWeight: 'bold',\n                        fontSize: '15px'\n                    }\n                },\n                tooltip: {\n                    enabled: true\n                }\n            },\n\n\n        ],\n\n\n\n    };\n\n    const series = [{\n        data: revenueArray\n    }];\n\n\n    const selectOption = categories?.map(\n        item => ({ label: item, value: item })\n    );\n\n    useEffect(() => {\n\n    }, [category])\n\n    return (\n\n\n        <Panel shaded>\n            <SelectPicker onChange={(e) => setCategory(e)} data={selectOption} style={{ width: 224 }} />\n            <ReactApexChart options={options} series={series} type=\"bar\" height={315} />\n        </Panel>\n\n\n\n\n\n\n\n    );\n}\n\nexport default Salestatuschart;\n","import React, { useState, useEffect } from 'react';\nimport ReactApexChart from 'react-apexcharts';\nimport { FlexboxGrid, Panel } from 'rsuite';\nimport HelperClass from '../helper';\nimport Salestatuschart from './salestatuschart';\nconst ChartStraming = ({ seriesData, title, colors, revenueFlag, }) => {\n\n\n    const options = {\n        chart: {\n            height: 350,\n            type: 'line',\n\n            toolbar: {\n                show: false\n            }\n        },\n        colors: colors,\n        stroke: {\n            show: true,\n            // curve: 'smooth',\n            // colors: undefined,\n            width: 3,\n            dashArray: 0,\n        },\n        markers: {\n            shape: \"circle\",\n            size: 5\n        },\n        title: {\n            text: title,\n            align: 'left'\n        },\n\n\n        xaxis: {\n            categories: seriesData?.categories,\n            title: {\n                text: 'Time'\n            }\n        },\n        yaxis: {\n            title: {\n                text: !revenueFlag ? 'Sales' : \"Order , Revenue , Inventory\"\n            },\n            axisTicks: {\n                show: true,\n            },\n            axisBorder: {\n                show: true,\n                color: 'black'\n            },\n\n        },\n\n    };\n    let series = [];\n\n    revenueFlag ?\n        series = [\n            {\n                name: \"Orders\",\n                data: seriesData?.orderArray\n            },\n            {\n                name: \"Inventory\",\n                data: seriesData?.inventoryArray\n            },\n            {\n                name: \"Revenue\",\n                data: seriesData?.revenueArray\n            }\n        ]\n        :\n        series = [\n            {\n                name: \"Offline Sales\",\n                data: seriesData?.offLineSeries\n            },\n            {\n                name: \"Online Sales\",\n                data: seriesData?.onLineSeries\n            }\n        ]\n\n\n\n    const pieSeries = HelperClass?.bestSalesProducts().sales;\n    const pieOption = {\n        chart: {\n            type: 'donut',\n        },\n        labels: HelperClass?.bestSalesProducts()?.products,\n        title: {\n            text: 'Best Selling Products',\n            align: 'left'\n        },\n        dataLabels: {\n            enabled: true, // Ensure that labels are enabled\n        },\n\n\n        responsive: [{\n            breakpoint: 480,\n            options: {\n                chart: {\n                    width: 200\n                },\n\n                legend: {\n                    position: 'top'\n                }\n            }\n        }]\n    };\n    return (\n        <FlexboxGrid justify=\"space-around\" style={{ marginTop: '20px' }}>\n\n            <FlexboxGrid.Item colspan={16} md={6}>\n                <Panel shaded>\n\n                    <ReactApexChart options={options} series={series} type=\"line\" height={350} />\n\n\n                </Panel>\n            </FlexboxGrid.Item>\n\n\n            <FlexboxGrid.Item colspan={8} md={6}>\n                {\n                    !revenueFlag ?\n                        <Panel shaded>\n                            <ReactApexChart options={pieOption} series={pieSeries} type=\"donut\" height={360} />\n                        </Panel> :\n                        <Salestatuschart />\n                }\n            </FlexboxGrid.Item>\n\n\n\n        </FlexboxGrid>\n\n    );\n};\n\nexport default ChartStraming;\n","import { IconButton, Table } from 'rsuite';\nimport Button from 'rsuite/Button';\nimport FileDownloadIcon from '@rsuite/icons/FileDownload';\nimport { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport DataGrid, { Column } from 'devextreme-react/data-grid';\nimport 'devextreme/dist/css/dx.common.css';\nimport 'devextreme/dist/css/dx.light.css';\nimport { FlexboxGrid } from 'rsuite';\nimport { Panel } from 'rsuite';\nexport default function CustomTable({ tableData }) {\n\n  return (\n\n    <>\n      <FlexboxGrid justify=\"space-around\" style={{ marginTop: '20px' }}>\n\n        <FlexboxGrid.Item colspan={24} md={6}>\n          <Panel header={'Recent Orders'} shaded>\n\n            <DataGrid\n              dataSource={tableData}\n              showBorders={true}\n              showColumnLines={true}\n              showRowLines={true}\n              height={500}\n            >\n              <Column dataField=\"OrderID\" caption=\"Order ID\" />\n              <Column dataField=\"CustomerName\" caption=\"Customer Name\" />\n              <Column dataField=\"OrderDate\" caption=\"Order Date\" dataType=\"date\" />\n              <Column dataField=\"ShipCity\" caption=\"Ship City\" />\n              <Column dataField=\"Total\" caption=\"Total\" format=\"currency\" />\n              <Column dataField=\"OrderStatus\" caption=\"Order Status\" cellRender={(data) => {\n                return <span className={data.data.OrderStatus.toLowerCase()}>{data.value}</span>;\n              }} />\n            </DataGrid>\n          </Panel>\n        </FlexboxGrid.Item>\n      </FlexboxGrid>\n\n    </>\n  )\n}\n","\r\nimport React from 'react'\r\nimport './style.css';\r\nimport CustomTable from '../component/customTable'\r\nimport ChartStraming from '../component/chartStraming'\r\n\r\nimport HelperClass from '../helper';\r\n\r\nconst Dashboard = () => {\r\n\r\n    const offLineSeries = HelperClass.salesTypes().offLineSale;\r\n    const onLineSeries = HelperClass.salesTypes().onLineSale;\r\n    const categories = HelperClass.salesTypes().salesTime;\r\n    let seriesData = {\r\n        offLineSeries,\r\n        onLineSeries,\r\n        categories\r\n    }\r\n\r\n    const tableData = HelperClass.generateFakeOrders(500);\r\n    return (\r\n\r\n        <>\r\n\r\n            <ChartStraming seriesData={seriesData} title={'Sales'} colors={['#77B6EA', '#f44336']} />\r\n            <CustomTable tableData={tableData} />\r\n\r\n        </>\r\n\r\n    )\r\n}\r\n\r\nexport default React.memo(Dashboard)","// staticClass.js\nimport { Schema } from \"rsuite\";\nimport { salesTypesData, bestSallingProducts } from \"./testData\";\nconst HelperClass = {\n    // Define your static functions as properties\n    loginSchema: () => {\n        return Schema.Model({\n            username: Schema.Types.StringType().isRequired('This field is required.'),\n            password: Schema.Types.StringType().minLength(6, \"Can't be less than 6 characters\")\n                .maxLength(30, 'Cannot be greater than 30 characters')\n                .isRequired('This field required')\n        });\n    },\n    salesTypes: () => {\n        let offLineSale = [];\n        let onLineSale = [];\n        let salesTime = [];\n        salesTypesData.forEach((item) => {\n            offLineSale.push(item.OnlineSales);\n            onLineSale.push(item.OfflineSales)\n            salesTime.push(item.Month)\n        })\n\n        return {\n            offLineSale,\n            onLineSale,\n            salesTime\n        }\n    },\n\n    bestSalesProducts: () => {\n        let products = [];\n        let sales = [];\n\n        bestSallingProducts.forEach((item) => {\n            products.push(item.Product);\n            sales.push(item.Sales)\n\n        })\n\n        return {\n            products,\n            sales\n        }\n    },\n\n    generateFakeOrders: (count) => {\n        const orders = [];\n        const orderStatuses = ['Pending', 'Processing', 'Shipped', 'Delivered', 'Cancelled'];\n\n        for (let i = 1; i <= count; i++) {\n            const order = {\n                OrderID: i,\n                CustomerName: `Customer ${i}`,\n                OrderDate: new Date(2023, Math.floor(Math.random() * 12), Math.floor(Math.random() * 28)),\n                ShipCity: `City ${Math.floor(Math.random() * 10)}`,\n                Total: Math.floor(Math.random() * 1000) + 100,\n                OrderStatus: orderStatuses[Math.floor(Math.random() * orderStatuses.length)], // Random order status\n            };\n            orders.push(order);\n        }\n        return orders;\n    },\n\n    timeAggregation: (data, type) => {\n\n\n\n        if (type === 'y') {\n\n            const aggregatedDataYearly = data.reduce((result, item) => {\n                const timestamp = new Date(item.date);\n                const yearKey = timestamp.getFullYear().toString();\n\n                if (!result[yearKey]) {\n                    result[yearKey] = {\n                        revenue: 0,\n                        inventory: 0,\n                        orders: 0,\n                    };\n                }\n\n                result[yearKey].revenue += item.revenue;\n                result[yearKey].inventory += item.inventory;\n                result[yearKey].orders += item.orders;\n\n                return result;\n            }, {});\n\n            return aggregatedDataYearly;\n        } else if (type === 'w') {\n\n            const aggregatedDataWeekly = data.reduce((result, item) => {\n                const timestamp = new Date(item.date);\n                const weekOfYear = getWeekOfYear(timestamp);\n\n                console.log(weekOfYear, 'weekOfYear')\n                if (!result[weekOfYear]) {\n                    result[weekOfYear] = {\n                        revenue: 0,\n                        inventory: 0,\n                        orders: 0,\n                    };\n                }\n\n                result[weekOfYear].revenue += item.revenue;\n                result[weekOfYear].inventory += item.inventory;\n                result[weekOfYear].orders += item.orders;\n\n                return result;\n            }, {});\n\n            // Helper function to calculate the week of the year\n            function getWeekOfYear(date) {\n                const startOfYear = new Date(date.getFullYear(), 0, 1);\n                const days = Math.floor((date - startOfYear) / (24 * 60 * 60 * 1000));\n                return Math.ceil((days + startOfYear.getDay() + 1) / 7);\n            }\n            return aggregatedDataWeekly\n        } else if (type === 'm') {\n            const aggregatedDataMonthly = data.reduce((result, item) => {\n                const timestamp = new Date(item.date);\n                const yearMonthKey = `${timestamp.getFullYear()}-${(timestamp.getMonth() + 1)\n                    .toString()\n                    .padStart(2, '0')}`;\n\n                if (!result[yearMonthKey]) {\n                    result[yearMonthKey] = {\n                        revenue: 0,\n                        inventory: 0,\n                        orders: 0,\n                    };\n                }\n\n                result[yearMonthKey].revenue += item.revenue;\n                result[yearMonthKey].inventory += item.inventory;\n                result[yearMonthKey].orders += item.orders;\n\n                return result;\n            }, {});\n\n\n\n            return aggregatedDataMonthly;\n        }\n\n\n    }\n\n\n\n\n};\n\n// Export the object\nexport default HelperClass;\n","\"use strict\";\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction FileDownload(props, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: \"1em\",\n    height: \"1em\",\n    viewBox: \"0 0 16 16\",\n    fill: \"currentColor\",\n    ref: svgRef\n  }, props), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M9.586 0a1 1 0 01.608.206l.099.087L14 4a1 1 0 01-1 1H9.5a.5.5 0 01-.5-.5V1H3a1 1 0 00-.993.883L2 2v12a1 1 0 00.883.993L3 15h9a1 1 0 00.993-.883L13 14V7.5a.5.5 0 01.992-.09L14 7.5V14a2.001 2.001 0 01-1.851 1.995L12 16H3a2.001 2.001 0 01-1.995-1.851L1 14V2C1 .946 1.816.082 2.851.005L3 0h6.586zM10 1.415V4h2.585L10 1.415z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M7.5 6a.5.5 0 01.5.5v3.792l1.646-1.646a.5.5 0 01.707.707l-2.512 2.512a.4.4 0 01-.039.033l.051-.045a.471.471 0 01-.122.089l-.024.012a.39.39 0 00-.02.009l-.013.005-.018.006-.029.009a.174.174 0 01-.022.005l-.033.006-.052.005h-.041a.436.436 0 01-.052-.005l.072.005a.52.52 0 01-.105-.011l-.022-.005-.029-.009-.018-.006-.013-.005a.39.39 0 01-.02-.009l-.024-.012a.397.397 0 01-.07-.044.31.31 0 01-.039-.033l-.012-.012-2.5-2.5a.5.5 0 01.707-.707L7 10.293V6.5a.5.5 0 01.5-.5z\"\n  }));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(FileDownload);\nvar _default = ForwardRef;\nexports[\"default\"] = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"default\", {\n  enumerable: true,\n  get: function get() {\n    return _FileDownload[\"default\"];\n  }\n});\n\nvar _FileDownload = _interopRequireDefault(require(\"./lib/icons/FileDownload\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : { default: obj };\n}\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nexports.__esModule = true;\nexports[\"default\"] = void 0;\n\nvar _createSvgIcon = _interopRequireDefault(require(\"../createSvgIcon\"));\n\nvar _FileDownload = _interopRequireDefault(require(\"@rsuite/icon-font/lib/action/FileDownload\"));\n\n// Generated by script, don't edit it please.\nvar FileDownload = (0, _createSvgIcon[\"default\"])({\n  as: _FileDownload[\"default\"],\n  ariaLabel: 'file download',\n  category: 'action',\n  displayName: 'FileDownload'\n});\nvar _default = FileDownload;\nexports[\"default\"] = _default;\nmodule.exports = exports.default;"],"names":["revenueArray","categories","_useState","useState","_useState2","_slicedToArray","category","setCategory","useSelector","state","_state$inventory","inventory","inventoryData","filter","item","forEach","element","push","revenue","options","chart","type","xaxis","title","text","align","colors","dataLabels","style","fontSize","fontWeight","enabled","dropShadow","left","top","opacity","yaxis","axisTicks","show","axisBorder","color","labels","tooltip","series","data","selectOption","map","label","value","useEffect","_jsxs","Panel","shaded","children","_jsx","SelectPicker","onChange","e","width","ReactApexChart","height","_ref","_HelperClass$bestSale","seriesData","revenueFlag","toolbar","stroke","dashArray","markers","shape","size","name","orderArray","inventoryArray","offLineSeries","onLineSeries","pieSeries","HelperClass","bestSalesProducts","sales","pieOption","products","responsive","breakpoint","legend","position","FlexboxGrid","justify","marginTop","Item","colspan","md","Salestatuschart","CustomTable","tableData","_Fragment","header","DataGrid","dataSource","showBorders","showColumnLines","showRowLines","Column","dataField","caption","dataType","format","cellRender","className","OrderStatus","toLowerCase","Dashboard","salesTypes","offLineSale","onLineSale","salesTime","generateFakeOrders","ChartStraming","React","loginSchema","Schema","Model","username","Types","StringType","isRequired","password","minLength","maxLength","salesTypesData","OnlineSales","OfflineSales","Month","bestSallingProducts","Product","Sales","count","orders","orderStatuses","i","order","OrderID","CustomerName","concat","OrderDate","Date","Math","floor","random","ShipCity","Total","length","timeAggregation","reduce","result","yearKey","date","getFullYear","toString","weekOfYear","startOfYear","days","ceil","getDay","getWeekOfYear","console","log","timestamp","yearMonthKey","getMonth","padStart","_typeof","obj","Symbol","iterator","constructor","prototype","Object","defineProperty","exports","__esModule","cache","_getRequireWildcardCache","has","get","newObj","hasPropertyDescriptor","getOwnPropertyDescriptor","key","hasOwnProperty","call","desc","set","_interopRequireWildcard","require","WeakMap","_extends","assign","target","arguments","source","apply","this","FileDownload","props","svgRef","createElement","viewBox","fill","ref","d","_default","forwardRef","_FileDownload","default","_interopRequireDefault","_createSvgIcon","as","ariaLabel","displayName","module"],"sourceRoot":""}